
Installing Patches
------------------

This module currently requires a few minor patches to the Apache source
code for correct operation. In the patches subdirectory, you'll find two
patch files:


     apache-1.1.3.diff     -- For Apache 1.1.3
     stronghold-1.3.4.diff -- For Stronghold 1.3.4


To apply the patch to Apache 1.1.3, run the command:


     patch -p1 -d /path/to/apache_1.1.3 < \
          /path/to/mod_auth_dce-1.0/patches/apache-1.1.3.diff


To apply the patch to Stronghold 1.3.4, first install Stronghold, which
will create the src directory under your server_root. Then, run the 
command:


     patch -p1 -d /path/to/stronghold_server_root < \
          /path/to/mod_auth_dce-1.0/patches/stronghold-1.3.4.diff


Stronghold requires some minor changes by hand to work correctly with
mod_auth_dce. Please see the end of this file for details.



Technical Details
-----------------

The following is a list of files modified by the patches and the reasons
the modifications needed to be made.

  mod_cgi.c

       The call to can_exec(), which checks execute permissions by
       comparing the server's UID and GID to owner/group permissions
       on the file, does not work correctly when a CGI might not be
       executable by the server user/group. This call is replaced with
       a call to the access() system routine instead, which will take
       ACLs into account when deciding whether execute permission
       exists.


  mod_userdir.c

       This module was using the r->finfo structure as storage for a 
       local stat. This contaminated the structure, and had unexpected
       side effects on mod_auth_dce. A local stat structure was added.
      

  http_request.c

       In the get_path_info() function in this file, the server tries to
       separate the request into a system path and the extra PATH_INFO
       environment variable. This is accomplished by repeated calls to
       stat(), and the removal of the rightmost component of the
       request on each stat() failure. This function is called before
       any credentials are obtained, and the stat() might fail with a
       permission error if the any_other entry does not have access.
       This makes the PATH_INFO incorrect. The function is modified to
       check for a permission error (EACCES) when stat() fails, and if
       it finds one, to immediately return OK with no further processing.
       mod_auth_dce will call this function again after credentials
       have been obtained, if needed, to correctly separate the PATH_INFO.


  Configuration

       An AUX_LIBS line is added for each configuration for which the
       correct DCE libraries are known, and a Module line is added for
       mod_auth_dce.


  md5.h, md5c.c, mod_proxy.c, util_md5.h, util_md5.c 

       Apache includes MD5 hashing routines. These routines collide
       with identically named functions in the DCE library. All the
       Apache routines are modified to include an apache_ prefix to
       remove this collision.


Further Modifications for Stronghold
------------------------------------

By default, Stronghold is shipped to compile with RSAREF. Unfortunately,
rsaref.a also includes MD5 routines that collide with the DCE library.
To fix this, either the RSAREF code must be modified and recompiled to
remove the collision, or Stronghold must be compiled without RSAREF.

RSA Data Security, Inc. claims it is a patent violation to use the SSLeay
RSA routines inside the US. My patch does not reconfigure Stronghold to
use SSLeay. If you are in the US, I neither recommend nor endorse
violating RSA's patent. If you choose to use Stronghold with SSLeay RSA
routines in the US, you accept full responsibility for any legal
ramifications, and by using mod_auth_dce with such a configuration you
explicitly agree that I am in no way responsible for your actions.

To compile Stronghold without RSAREF, edit the Configuration file. Remove
libRSAglue.a from the SSL_LIBS line, and comment out the SSL_RSA_LIBS
liine.
